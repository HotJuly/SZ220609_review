无论是多大的后台管理系统,帐号角色最少两种:
    1.管理员
        管理员具有当前项目所有模块的使用权,和功能的使用资格
    2.访客
        访客只能访问所有人都有资格查看的基础模块和基础功能

完整的权限管理组成部分:路由级别权限管理+按钮级别权限管理

需求:根据当前的帐号权限,控制当前用户能够使用的模块内容(路由级别权限管理)
拆解:
    1.根据当前的帐号权限
        在用户登录帐号的时候,可以知道当前账号的权限情况
        流程:
            1.当用户输入完帐号密码,点击登录按钮,会请求接口login,兑换用户的唯一标识token字符串
            2.再请求接口info,并在请求头中添加token数据,发送给服务器
                兑换用户的帐号信息,其中重要的内容
                    buttons->当前账号有资格使用的功能权限(用来实现按钮级别权限管理)
                    routes->当前账号有资格使用的路由权限(用来实现路由级别权限管理)
                            数据类型:string[]   =>  内部存放的是能够访问的路由名称
                    

    2.控制当前用户能够使用的模块内容(控制能访问的路由)
        问题:有几种方法能够实现不让用户进入某个路由?
        回答:
            1.在导航守卫中做判断,使用next(false),禁止用户进入该路由
            2.只要我们不注册某个路由,那么用户绝对进不去

        问题:如何让管理员能够访问本来无法访问的路由(说的就是asyncRoutes)
        回答:
            静态注入->在new VueRouter的时候,传入routes数组,在内部注册路由
            动态注入->可以在项目的任何一个地方,调用方法进行二次注册
                router.addRoute(路由对象)
                router.addRoutes(由多个路由对象组成的数组)


    流程:
        1.将路由拆分成三个数组,分别存放常量路由,异步路由和任意路由
            每个路由对象都必须有路由别名
        2.在用户触发info接口的时候,获取到当前账号的routes权限数组,并将其保存在VueX中
        3.将routeNames数组和asyncRoutes数组,传入自己封装的filterAsyncRoutes方法中,
            对asyncRoutes数组进行过滤操作
            最终可以得到一个由当前账号有资格访问的异步路由对象组成的全新数组
        4.使用router.addRoutes方法,将过滤得到新异步路由数组以及任意路由数组都注入到路由器中


    过程中遇到的BUG:
        1.左侧动态列表显示不对
            原因:因为左侧列表的显示,是根据new VueRouter时候传入的routes数组生成的
                由于我们现在已经实现了异步路由的拆解,导致显示错误
            解决方法:
                我们重新在Vuex中,创建了一个routes数组,内部存放的是能够访问的所有路由对象
                让左侧列表映射这个属性进行遍历展示

        2.多次不同权限的帐号登录退出之后,路由组件越来越少
            原因:由于每次过滤的时候,都是用的上一个帐号遗留的asyncRoutes进行过滤的,导致越过滤越少
            解决方法:
                在过滤asyncRoutes的时候,进行深克隆,每次都用克隆得到的结果进行过滤
                    相当于是每次修改的都是复印件,不是原件